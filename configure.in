AC_INIT(fribidi.c)

PACKAGE=fribidi
VERSION=0.10.0pre
INTERFACE_VERSION=1
AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE($PACKAGE, $VERSION)

dnl Checks for programs.
AC_PROG_AWK
AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_PROG_RANLIB


dnl Checks for libraries

dnl Initialize libtool
AM_PROG_LIBTOOL


dnl Checks for header files.
AC_HEADER_STDC


dnl Checks for typedefs
AC_CHECK_SIZEOF(int, 2)
AC_CHECK_SIZEOF(char, 1)
AC_CHECK_SIZEOF(char*, 2)


dnl Checks for compiler characteristics

changequote(,)dnl
if test "x$GCC" = "xyes"; then
  case " $CFLAGS " in
  *[\ \	]-Wall[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Wall " ;;
  esac
fi
changequote([,])dnl

dnl Cygwin does not set srcdir to ".".
if test x$srcdir = x; then
  xsrcdir=.
else
  xsrcdir="$srcdir"
fi

dnl check for fribidi_tab_char_type_*.i files

if test -f "${srcdir}/fribidi_tab_char_type_2.i" ||
   test -f         "./fribidi_tab_char_type_2.i"; then
  AC_DEFINE(HAS_FRIBIDI_TAB_CHAR_TYPE_2_I)
fi

if test -f "${srcdir}/fribidi_tab_char_type_3.i" ||
   test -f         "./fribidi_tab_char_type_3.i"; then
  AC_DEFINE(HAS_FRIBIDI_TAB_CHAR_TYPE_3_I)
fi

if test -f "${srcdir}/fribidi_tab_char_type_4.i" ||
   test -f         "./fribidi_tab_char_type_4.i"; then
  AC_DEFINE(HAS_FRIBIDI_TAB_CHAR_TYPE_4_I)
fi

if test -f "${srcdir}/fribidi_tab_char_type_5.i" ||
   test -f         "./fribidi_tab_char_type_5.i"; then
  AC_DEFINE(HAS_FRIBIDI_TAB_CHAR_TYPE_5_I)
fi

if test -f "${srcdir}/fribidi_tab_char_type_6.i" ||
   test -f         "./fribidi_tab_char_type_6.i"; then
  AC_DEFINE(HAS_FRIBIDI_TAB_CHAR_TYPE_6_I)
fi

if test -f "${srcdir}/fribidi_tab_char_type_7.i" ||
   test -f         "./fribidi_tab_char_type_7.i"; then
  AC_DEFINE(HAS_FRIBIDI_TAB_CHAR_TYPE_7_I)
fi

if test -f "${srcdir}/fribidi_tab_char_type_8.i" ||
   test -f         "./fribidi_tab_char_type_8.i"; then
  AC_DEFINE(HAS_FRIBIDI_TAB_CHAR_TYPE_8_I)
fi

if test -f "${srcdir}/fribidi_tab_char_type_9.i" ||
   test -f         "./fribidi_tab_char_type_9.i"; then
  AC_DEFINE(HAS_FRIBIDI_TAB_CHAR_TYPE_9_I)
fi

echo "creating fribidi_tab_char_type_stamp"
echo "time-stamp" > fribidi_tab_char_type_stamp

echo "creating fribidi_config.h"
PACKAGE=$PACKAGE
VERSION=$VERSION
cat > fribidi_config.h <<EOF
/* fribidi_config.h.  Generated automatically by configure.  */

#define FRIBIDI_PACKAGE "$PACKAGE"

#define FRIBIDI_VERSION "$VERSION"

#define FRIBIDI_INTERFACE_VERSION "$INTERFACE_VERSION"

EOF

dnl Check for configure options

dnl --enable-debug
AC_ARG_ENABLE(debug, dnl
[  --enable-debug          turn debugging information on [default=no]],
[case "${enableval}" in
  yes) debug=true ;;  
  no)  debug=false ;;
  *) AC_MSG_ERROR(bad value ${enableval} for --enable-debug) ;;
esac],[debug=false])
if test x"$debug" = xtrue; then
  AC_DEFINE(DEBUG)
fi

dnl --enable-malloc
AC_ARG_ENABLE(malloc, dnl
[  --enable-malloc         do not allocate chunks of memory  [default=no]],
[case "${enableval}" in
  yes) malloc=true ;;
  no)  malloc=false ;;
  *) AC_MSG_ERROR(bad value ${enableval} for --enable-malloc) ;;
esac],[malloc=false])
if test x"$malloc" = xtrue; then
  AC_DEFINE(USE_SIMPLE_MALLOC)
fi

dnl --enable-memopt
AC_ARG_ENABLE(memopt, dnl
[  --enable-memopt         optimize for memory usage [default=no]],
[case "${enableval}" in
  yes) memopt=true ;;
  no)  memopt=false ;;
  *) AC_MSG_ERROR(bad value ${enableval} for --enable-memopt) ;;
esac],[memopt=false])
if test x"$memopt" = xtrue; then
  AC_DEFINE(MEM_OPTIMIZED)
fi

dnl --without-charsets
AC_ARG_WITH(charsets, dnl
[  --without-charsets      exclude character set converters from library
                          causes command-line tool to use iconv],
[case "${withval}" in
  yes) charsets=true ;;
  no)  charsets=false ;;
  *) AC_MSG_ERROR(bad value ${withval} for --without-charsets) ;;
esac],[charsets=true])
if test x"$charsets" = xfalse; then
  AC_DEFINE(FRIBIDI_NO_CHARSETS)
  echo "#define FRIBIDI_NO_CHARSETS 1" >> fribidi_config.h
fi

AC_OUTPUT([
Makefile
fribidi-config
],[case "$CONFIG_FILES" in
*fribidi-config*)chmod +x fribidi-config;;
esac])
